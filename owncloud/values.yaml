# Default values for owncloud.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

owncloudEnv:
  AdminPass:
    name: OWNCLOUD_ADMIN_PASSWORD
    value: admin
  AdminUser:
    name: OWNCLOUD_ADMIN_USERNAME
    value: admin
  DbHost:
    name: OWNCLOUD_DB_HOST
    value: mariadb
  DbName:
    name: OWNCLOUD_DB_NAME
    value: owncloud
  DbPass:
    name: OWNCLOUD_DB_PASSWORD
    value: owncloud
  DbType:
    name: OWNCLOUD_DB_TYPE
    value: mysql
  DbUser:
    name: OWNCLOUD_DB_USERNAME
    value: mysql
  DbDomain:
    name: OWNCLOUD_DOMAIN
    value: localhost:8080
  MySqlUtf:
    name: OWNCLOUD_MYSQL_UTF8MB4
    value: "true"
  RedisEn:
    name: OWNCLOUD_REDIS_ENABLED
    value: "true"
  RedisHost:
    name: OWNCLOUD_REDIS_HOST
    value: redis
  TrustedDomains:
    name: OWNCLOUD_TRUSTED_DOMAINS
    value: localhost
  image:
    repository: owncloud/server
    version: "10.13"
    pullPolicy: IfNotPresent

mariaDb:
  env:
    autoUpgrade:
      name: MARIADB_AUTO_UPGRADE
      value: "1"
    mySql:
      db:
        name: MYSQL_DATABASE
        value: owncloud
      pass:
        name: MYSQL_PASSWORD
        value: owncloud
      rootPass:
        name: MYSQL_ROOT_PASSWORD
        value: owncloud
      user:
        name: MYSQL_USER
        value: owncloud
  image:
    repository: mariadb
    version: "10.11"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    appservice: owncloud
  name: owncloud
spec:
  replicas: 1
  selector:
    matchLabels:
      appservice: owncloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        net/default: "true"
        appservice: owncloud
    spec:
      containers:
        - env:
            - name: {{ .Values.owncloudEnv.AdminPass.name }}
              value: {{ .Values.owncloudEnv.AdminPass.value }}
            - name: {{ .Values.owncloudEnv.AdminUser.name }}
              value: {{ .Values.owncloudEnv.AdminUser.value }}
            - name: {{ .Values.owncloudEnv.DbHost.name }}
              value: {{ .Values.owncloudEnv.DbHost.value }}
            - name: {{ .Values.owncloudEnv.DbName.name }}
              value: {{ .Values.owncloudEnv.DbName.value }}
            - name: {{ .Values.owncloudEnv.DbPass.name }}
              value: {{ .Values.owncloudEnv.DbPass.value }}
            - name: {{ .Values.owncloudEnv.DbType.name }}
              value: {{ .Values.owncloudEnv.DbType.value }}
            - name: {{ .Values.owncloudEnv.DbUser.name }}
              value: {{ .Values.owncloudEnv.DbUser.value }}
            - name: {{ .Values.owncloudEnv.MySqlUtf.name }}
              value: "true"
            - name: {{ .Values.owncloudEnv.RedisEn.name }}
              value: "true"
            - name: {{ .Values.owncloudEnv.RedisHost.name }}
              value: {{ .Values.owncloudEnv.RedisHost.value }}
            - name: {{ .Values.owncloudEnv.TrustedDomains.name }}
              value: {{ .Values.owncloudEnv.TrustedDomains.value }}
          image: {{ .Values.owncloudEnv.image.repository }}:{{ .Values.owncloudEnv.image.version }}
          livenessProbe:
            exec:
              command:
                - /usr/bin/healthcheck
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: owncloud-server
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /mnt/data
              name: files
      restartPolicy: Always
      volumes:
        - name: files
          persistentVolumeClaim:
            claimName: files

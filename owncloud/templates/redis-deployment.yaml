apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kubernetes.service: redis
  name: redis
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      io.kubernetes.service: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kubernetes.network/owncloud-kubernetes-default: "true"
        io.kubernetes.service: redis
    spec:
      containers:
        - args:
            - --databases
            - "1"
          image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.version }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            failureThreshold: {{ .Values.redis.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.redis.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.redis.livenessProbe.timeoutSeconds }}
          name: {{ .Values.redis.name }}
          resources: {}
          volumeMounts:
            - name: redis
              mountPath: /data
      restartPolicy: {{ .Values.redis.restartPolicy }}
      volumes:
        - name: redis
          persistentVolumeClaim:
            claimName: redis
status: {}

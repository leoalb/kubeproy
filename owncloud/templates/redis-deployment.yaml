apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    appservice: redis
  name: {{ .Values.redis.name }}
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      appservice: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        net/default: "true"
        appservice: redis
    spec:
      containers:
        - args:
            - --databases
            - "1"
          image: {{ .Values.redis.containers.image.repository }}:{{ .Values.redis.containers.image.version }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            failureThreshold: {{ .Values.redis.containers.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.redis.containers.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.redis.containers.livenessProbe.timeoutSeconds }}
          name: {{ .Values.redis.containers.name }}
          volumeMounts:
            - mountPath: {{ .Values.redis.containers.volumeMounts.mountPath }}
              name: {{ .Values.redis.containers.volumeMounts.name }}
      restartPolicy: {{ .Values.redis.restartPolicy }}
      volumes:
        - name: {{ .Values.redis.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.redis.volumes.persistentVolumeClaim.claimName }}
